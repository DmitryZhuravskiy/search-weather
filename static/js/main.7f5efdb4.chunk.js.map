{"version":3,"sources":["images/graphic-location.svg","components/Locations.js","components/NextDayComponent.js","components/ParameterOfDayComponent.js","components/DataOfHalfDay.js","constants/constants.js","App.js","index.js"],"names":["Locations","className","src","GraphicLocation","alt","onSubmit","this","props","weatherMethod","type","placeholder","name","cityList","sort","a","b","map","value","required","onClick","getOneCity","id","deleteCityInList","React","Component","NextDayComponent","image","date_day_next","temp_day_max","width","height","viewBox","fill","xmlns","d","temp_day_min","ParameterOfDayComponent","title","DataOfHalfDay","picture","date_now","city","country","weather_icon","weather","temp_of_half_day","temp_max","temp_min","clip-path","humidity","pressure","wind","sunrise","sunset","daytime","date_day_next1","temp_day2_max","temp_day2_min","fill-rule","clip-rule","date_day_next2","temp_day3_max","temp_day3_min","date_day_next3","temp_day4_max","temp_day4_min","WEEK_DAYS","MONTHS","API_KEY","App","e","preventDefault","ourElementNumber","target","newCityList","state","splice","i","length","setState","localStorage","JSON","stringify","getWeather","elements","fetch","api_url","json","data","counterOfDouble","sys","main","temp","getOneCityWeather","coord","lat","lon","api_url2","data2","dateSet","Date","dateSet2","dataSetDay2","dataSetDay3","dataSetDay4","setTime","daily","dt","sunsetDate","getHours","getMinutes","sunriseDate","daytimeString","newDate","date_now_const","getDay","getDate","getMonth","getFullYear","date_now_const_next","ourTime","date_day2","toString","date_day3","date_day4","date_now_night","error","Math","floor","humidity_night","hourly","pressure_night","temp_day","day","temp_night","night","min","max","speed","wind_night","wind_speed","weather_night","icon","weather_icon_night","undefined","stateLocal","parse","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f5efdb4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/graphic-location.63886ebf.svg\";","import React from \"react\";\n\nimport GraphicLocation from './../images/graphic-location.svg'\n\nclass Locations extends React.Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <section className=\"location\">\n          <div className=\"graphic location-graphic\">\n            <img src={GraphicLocation} alt=\"main image\" />\n          </div>\n          <div className=\"location-data\">\n            <h2 className=\"location-data__title\">Location</h2>\n            <form\n              className=\"location-data__search-town\"\n              onSubmit={this.props.weatherMethod}\n            >\n              <input\n                className=\"search-town__input\"\n                type=\"text\"\n                placeholder=\"Введите город\"\n                name=\"city\"\n              />\n              <button className=\"search-town__input-submit\" type=\"submit\">\n                Добавить город\n              </button>\n            </form>\n            <ul className=\"location__list\">\n              {[...this.props.cityList].sort( (a,b) => (a[1]>b[1]) ).map((a) => (\n                <li className=\"location__list-item\" key={a[0]}>\n                  <input\n                    type=\"text\"\n                    className=\"list-item__town\"\n                    value={`${a[1]}, ${a[2]}`}\n                    name={a[1]}\n                    required\n                    onClick={this.props.getOneCity}\n                  />\n                  <div className=\"location__list-temp-delete\">\n                    <p className=\"list-item__temperature\">{a[3]}°C</p>\n                    <button\n                      className=\"list-item__delete\"\n                      id={a[0]}\n                      value={a[0]}\n                      onClick={this.props.deleteCityInList}\n                    >\n                      X\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n\n      </div>\n    );\n  }\n}\n\nexport default Locations;\n","import React from \"react\";\n\nclass NextDayComponent extends React.Component {\n  render() {\n    return (\n      <div className=\"data__wednesday night-main__item data__near-day\">\n        {this.props.image}\n        <p className=\"something__value  wednesday__value\">\n          {this.props.date_day_next}\n        </p>\n        <div className=\"day__icons wednesday__icons\">\n          <p className=\"something__title wednesday-icons__up\">\n            {this.props.temp_day_max}°C{\" \"}\n            <svg width=\"5\" height=\"8\" viewBox=\"0 0 5 8\" fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M4.14647 2.8535L3 1.70703V7.49998C3 7.77636 2.77636 8 2.49999 8C2.22361 8 1.99997 7.77636 1.99997 7.49998V1.70703L0.853509 2.8535C0.658181 3.04883 0.341776 3.04883 0.146496 2.8535C-0.0488319 2.65817 -0.0488319 2.34177 0.146496 2.14648L2.1459 0.147079C2.19216 0.100672 2.24757 0.0638757 2.30911 0.0384226C2.37019 0.0131569 2.43497 -1.52588e-05 2.50004 -1.52588e-05C2.5651 -1.52588e-05 2.62988 0.0131569 2.69096 0.0384226C2.7525 0.0638757 2.80791 0.100672 2.85417 0.147079L4.85357 2.14648C5.0489 2.34181 5.0489 2.65822 4.85357 2.8535C4.6582 3.04883 4.3418 3.04883 4.14647 2.8535Z\" fill=\"#AAAAAA\" />\n            </svg>\n          </p>\n          <p className=\"something__title wednesday-icons__down\">\n            {this.props.temp_day_min}°C{\" \"}\n            <svg width=\"5\" height=\"8\" viewBox=\"0 0 5 8\" fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M4.14647 5.1465L3 6.29297V0.500015C3 0.22364 2.77636 0 2.49999 0C2.22361 0 1.99997 0.22364 1.99997 0.500015V6.29297L0.853509 5.1465C0.658181 4.95117 0.341776 4.95117 0.146496 5.1465C-0.0488319 5.34183 -0.0488319 5.65823 0.146496 5.85352L2.1459 7.85292C2.19216 7.89933 2.24757 7.93612 2.30911 7.96158C2.37019 7.98684 2.43497 8.00002 2.50004 8.00002C2.5651 8.00002 2.62988 7.98684 2.69096 7.96158C2.7525 7.93612 2.80791 7.89933 2.85417 7.85292L4.85357 5.85352C5.0489 5.65819 5.0489 5.34178 4.85357 5.1465C4.6582 4.95117 4.3418 4.95117 4.14647 5.1465Z\" fill=\"#AAAAAA\" />\n            </svg>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NextDayComponent;\n","import React from \"react\";\n\nclass ParameterOfDayComponent extends React.Component {\n  render() {\n    return (\n      <div className=\"night-main__item\">\n        {this.props.image}\n        <p className=\"something__value daytime__value\">{this.props.value}</p>\n        <p className=\"something__title daytime__title\">{this.props.title}</p>\n      </div>\n    );\n  }\n}\n\nexport default ParameterOfDayComponent;\n","import React from \"react\";\nimport NextDayComponent from \"./NextDayComponent\";\nimport ParameterOfDayComponent from \"./ParameterOfDayComponent\";\n\nclass DataOfHalfDay extends React.Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <section className=\"night\">\n          <div className={`graphic night-graphic ${this.props.picture}`}>\n            <img src={this.props.picture} />\n          </div>\n          <div className=\"night-data\">\n            <div className=\"night-top\">\n              <p className=\"night-top__time\">{this.props.date_now}</p>\n              <p className=\"night-top__place\">\n                {this.props.city}, {this.props.country}\n              </p>\n            </div>\n            <div className=\"night-main\">\n              <div className=\"data__weather night-main__item\">\n                <img\n                  src={`http://openweathermap.org/img/w/${this.props.weather_icon}.png`}\n                  alt=\"weather_icon_night\"\n                />\n                <p className=\"weather__text\">{this.props.weather}</p>\n              </div>\n              <p className=\"data__temperature night-main__item\">\n                {this.props.temp_of_half_day}\n                <sup className=\"data__temperature-sup\">°C</sup>\n              </p>\n              <div className=\"data__temperature-amplitude night-main__item\">\n                <p className=\"data__temperature-max\">\n                  {this.props.temp_max}°C\n                  <svg width=\"5\" height=\"8\" viewBox=\"0 0 5 8\" fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4.14647 2.8535L3 1.70703V7.49998C3 7.77636 2.77636 8 2.49999 8C2.22361 8 1.99997 7.77636 1.99997 7.49998V1.70703L0.853509 2.8535C0.658181 3.04883 0.341776 3.04883 0.146496 2.8535C-0.0488319 2.65817 -0.0488319 2.34177 0.146496 2.14648L2.1459 0.147079C2.19216 0.100672 2.24757 0.0638757 2.30911 0.0384226C2.37019 0.0131569 2.43497 -1.52588e-05 2.50004 -1.52588e-05C2.5651 -1.52588e-05 2.62988 0.0131569 2.69096 0.0384226C2.7525 0.0638757 2.80791 0.100672 2.85417 0.147079L4.85357 2.14648C5.0489 2.34181 5.0489 2.65822 4.85357 2.8535C4.6582 3.04883 4.3418 3.04883 4.14647 2.8535Z\" fill=\"#AAAAAA\" />\n                  </svg>\n                </p>\n                <p className=\"data__temperature-min\">\n                  {this.props.temp_min}°C\n                  <svg width=\"5\" height=\"8\" viewBox=\"0 0 5 8\" fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M4.14647 5.1465L3 6.29297V0.500015C3 0.22364 2.77636 0 2.49999 0C2.22361 0 1.99997 0.22364 1.99997 0.500015V6.29297L0.853509 5.1465C0.658181 4.95117 0.341776 4.95117 0.146496 5.1465C-0.0488319 5.34183 -0.0488319 5.65823 0.146496 5.85352L2.1459 7.85292C2.19216 7.89933 2.24757 7.93612 2.30911 7.96158C2.37019 7.98684 2.43497 8.00002 2.50004 8.00002C2.5651 8.00002 2.62988 7.98684 2.69096 7.96158C2.7525 7.93612 2.80791 7.89933 2.85417 7.85292L4.85357 5.85352C5.0489 5.65819 5.0489 5.34178 4.85357 5.1465C4.6582 4.95117 4.3418 4.95117 4.14647 5.1465Z\" fill=\"#AAAAAA\" />\n                  </svg>\n                </p>\n              </div>\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <g clip-path=\"url(#clip0)\">\n                    <path d=\"M15.3354 0.129655C15.145 -0.0432183 14.8549 -0.0432183 14.6645 0.129655C14.4469 0.325872 9.46663 4.87767 7.15388 10.1533C6.9046 10.0657 6.61764 10.0002 6.24662 10.0002C5.37115 10.0002 4.90142 10.3268 4.52399 10.5895C4.19441 10.819 3.93416 11.0001 3.37214 11.0001C2.8111 11.0001 2.55085 10.819 2.22174 10.59C1.84478 10.3273 1.37505 10.0002 0.500087 10.0002C0.223715 10.0002 7.62939e-05 10.2238 7.62939e-05 10.5002C7.62939e-05 10.7766 0.223715 11.0002 0.500087 11.0002C1.06113 11.0002 1.32138 11.1814 1.65048 11.4103C2.02745 11.673 2.49718 12.0002 3.37214 12.0002C4.24761 12.0002 4.71781 11.673 5.09525 11.4103C5.42482 11.1814 5.68507 11.0002 6.24662 11.0002C6.80912 11.0002 7.06988 11.1814 7.39993 11.4108C7.77736 11.6735 8.24756 12.0002 9.12355 12.0002C9.99903 12.0002 10.4692 11.6735 10.8472 11.4108C11.1767 11.1813 11.4375 11.0002 12 11.0002C12.2764 11.0002 12.5 10.7766 12.5 10.5002C12.5 10.2238 12.2764 10.0002 12 10.0002C11.1241 10.0002 10.6538 10.3268 10.2759 10.5895C9.94634 10.819 9.68558 11.0001 9.1236 11.0001C8.59823 11.0001 8.33503 10.8399 8.03414 10.632C9.91479 6.28855 13.8307 2.31335 15 1.18724C16.5571 2.68769 23 9.24333 23 15.0001C23 19.4112 19.4111 23 15 23C13.0089 23 11.125 22.2584 9.66664 20.9489C10.2077 20.8487 10.557 20.6125 10.8472 20.4107C11.1768 20.1812 11.4376 20.0001 12.0001 20.0001C12.2764 20.0001 12.5001 19.7764 12.5001 19.5C12.5001 19.2237 12.2764 19 12.0001 19C11.1241 19 10.6539 19.3267 10.276 19.5894C9.94639 19.8189 9.68562 20 9.12364 20C8.56115 20 8.30039 19.8188 7.97081 19.5894C7.59286 19.3267 7.12266 19 6.24672 19C5.37124 19 4.90151 19.3267 4.52408 19.5894C4.1945 19.8189 3.93426 20 3.37223 20C2.81119 20 2.55094 19.8188 2.22184 19.5899C1.84487 19.3272 1.37514 19 0.500181 19C0.223808 19 0.000170043 19.2237 0.000170043 19.5C0.000170043 19.7764 0.223808 20.0001 0.500181 20.0001C1.06122 20.0001 1.32147 20.1812 1.65058 20.4102C2.02754 20.6729 2.49727 21 3.37223 21C4.24771 21 4.71791 20.6729 5.09534 20.4102C5.42491 20.1812 5.68516 20.0001 6.24672 20.0001C6.80921 20.0001 7.06998 20.1812 7.40002 20.4107C7.60369 20.5524 7.8413 20.7086 8.14818 20.8262C9.86379 22.8416 12.3507 24 15 24C19.9624 24 23.9999 19.9625 23.9999 15.0001C23.9999 8.04559 15.6889 0.44948 15.3354 0.129655Z\" fill=\"#AAAAAA\" />\n                    <path d=\"M0.500087 17.0001C1.06113 17.0001 1.32138 17.1813 1.65048 17.4102C2.02745 17.6729 2.49718 18.0001 3.37214 18.0001C3.64851 18.0001 3.87215 17.7764 3.87215 17.5C3.87215 17.2237 3.64851 17 3.37214 17C2.8111 17 2.55085 16.8189 2.22174 16.5899C1.84478 16.3272 1.37505 16.0001 0.500087 16.0001C0.223715 16.0001 7.62939e-05 16.2237 7.62939e-05 16.5001C7.62939e-05 16.7764 0.223715 17.0001 0.500087 17.0001Z\" fill=\"#AAAAAA\" />\n                    <path d=\"M6.24664 16.0001C5.97027 16.0001 5.74663 16.2237 5.74663 16.5001C5.74663 16.7765 5.97027 17.0001 6.24664 17.0001C6.80913 17.0001 7.0699 17.1813 7.39947 17.4108C7.77742 17.6734 8.24762 18.0001 9.12356 18.0001C9.99904 18.0001 10.4692 17.6734 10.8472 17.4108C11.1768 17.1813 11.4375 17.0001 12 17.0001C12.5718 17.0001 12.8628 17.1862 13.2305 17.4215C13.6548 17.6925 14.1358 18.0002 15 18.0002C15.2764 18.0002 15.5 17.7765 15.5 17.5001C15.5 17.2238 15.2764 17.0001 15 17.0001C14.4282 17.0001 14.1372 16.8141 13.7695 16.5787C13.3452 16.3077 12.8642 16.0001 12 16.0001C11.1241 16.0001 10.6538 16.3268 10.2759 16.5895C9.94635 16.819 9.68559 17.0001 9.12361 17.0001C8.56112 17.0001 8.30035 16.8189 7.97031 16.5895C7.59283 16.3267 7.12263 16.0001 6.24664 16.0001Z\" fill=\"#AAAAAA\" />\n                    <path d=\"M6.24662 13.0001C5.37115 13.0001 4.90142 13.3268 4.52399 13.5895C4.19441 13.819 3.93416 14.0001 3.37214 14.0001C2.8111 14.0001 2.55085 13.8189 2.22174 13.59C1.84478 13.3273 1.37505 13.0001 0.500087 13.0001C0.223715 13.0001 7.62939e-05 13.2238 7.62939e-05 13.5001C7.62939e-05 13.7765 0.223715 14.0002 0.500087 14.0002C1.06113 14.0002 1.32138 14.1813 1.65048 14.4103C2.02745 14.673 2.49718 15.0001 3.37214 15.0001C4.24761 15.0001 4.71781 14.673 5.09525 14.4103C5.42482 14.1813 5.68507 14.0002 6.24662 14.0002C6.523 14.0002 6.74664 13.7765 6.74664 13.5001C6.74664 13.2237 6.523 13.0001 6.24662 13.0001Z\" fill=\"#AAAAAA\" />\n                    <path d=\"M10.8472 14.4107C11.1767 14.1812 11.4375 14.0001 12 14.0001C12.561 14.0001 12.8213 14.1813 13.1504 14.4103C13.5274 14.6729 13.9971 15.0001 14.872 15.0001C15.7475 15.0001 16.2177 14.6729 16.5952 14.4103C16.9247 14.1813 17.185 14.0001 17.7465 14.0001C18.0229 14.0001 18.2465 13.7765 18.2465 13.5001C18.2465 13.2237 18.0229 13.0001 17.7465 13.0001C16.8711 13.0001 16.4013 13.3268 16.0239 13.5894C15.6943 13.8189 15.4341 14.0001 14.872 14.0001C14.311 14.0001 14.0508 13.8189 13.7217 13.5899C13.3447 13.3272 12.875 13.0001 12 13.0001C11.1241 13.0001 10.6538 13.3268 10.2759 13.5894C9.94634 13.8189 9.68558 14.0001 9.1236 14.0001C8.84723 14.0001 8.62359 14.2237 8.62359 14.5001C8.62359 14.7764 8.84723 15.0001 9.1236 15.0001C9.99903 15.0001 10.4692 14.6734 10.8472 14.4107Z\" fill=\"#AAAAAA\" />\n                  </g>\n                  <defs>\n                    <clipPath id=\"clip0\">\n                      <rect width=\"24\" height=\"24\" fill=\"white\" />\n                    </clipPath>\n                  </defs>\n                </svg>}\n                value={this.props.humidity + \"%\"}\n                title={\"Humidity\"}\n              />\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 6C12.2764 6 12.5 5.77636 12.5 5.49998V4.49999C12.5 4.22362 12.2764 3.99998 12 3.99998C11.7236 3.99998 11.5 4.22362 11.5 4.49999V5.49998C11.5 5.77636 11.7236 6 12 6Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M7.68309 5.52296C7.54444 5.2832 7.23825 5.2007 6.99998 5.33987C6.76073 5.47806 6.6787 5.78373 6.81689 6.02298L7.31691 6.88872C7.40967 7.04936 7.57767 7.1387 7.7505 7.1387C7.83548 7.1387 7.92141 7.11724 8.00002 7.07181C8.23927 6.93363 8.3213 6.62795 8.18311 6.3887L7.68309 5.52296Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M4.88868 9.31686L4.02295 8.81684C3.78272 8.67818 3.47803 8.76021 3.33984 8.99993C3.20166 9.23918 3.28369 9.54486 3.52294 9.68305L4.38867 10.1831C4.46728 10.2285 4.5532 10.25 4.63818 10.25C4.81106 10.25 4.97901 10.1606 5.07178 9.99997C5.20996 9.76072 5.12793 9.45504 4.88868 9.31686Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M20.4771 18.3169L19.6113 17.8169C19.3716 17.6782 19.0659 17.7602 18.9282 18C18.79 18.2392 18.8721 18.5449 19.1113 18.6831L19.977 19.1831C20.0557 19.2285 20.1416 19.25 20.2266 19.25C20.3994 19.25 20.5674 19.1606 20.6601 19C20.7983 18.7608 20.7163 18.4551 20.4771 18.3169Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M3.99998 14C3.99998 13.7236 3.77634 13.5 3.49997 13.5H2.49998C2.22361 13.5 1.99997 13.7236 1.99997 14C1.99997 14.2764 2.22361 14.5 2.49998 14.5H3.49997C3.77639 14.5 3.99998 14.2764 3.99998 14Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M22 14C22 13.7236 21.7763 13.5 21.5 13.5H20.5C20.2236 13.5 20 13.7236 20 14C20 14.2764 20.2236 14.5 20.5 14.5H21.5C21.7764 14.5 22 14.2764 22 14Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M4.38867 17.8169L3.52294 18.3169C3.28369 18.4551 3.20166 18.7607 3.33984 19C3.43261 19.1606 3.60061 19.25 3.77344 19.25C3.85842 19.25 3.94434 19.2285 4.02295 19.1831L4.88868 18.6831C5.12793 18.5449 5.20996 18.2392 5.07178 18C4.93312 17.7602 4.626 17.6782 4.38867 17.8169Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M19.3618 10.25C19.4468 10.25 19.5327 10.2286 19.6113 10.1832L20.4771 9.68314C20.7163 9.54495 20.7983 9.23928 20.6601 9.00003C20.521 8.76027 20.2148 8.67824 19.977 8.81694L19.1113 9.31695C18.8721 9.45514 18.79 9.76081 18.9282 10.0001C19.021 10.1607 19.189 10.25 19.3618 10.25Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M17 5.33984C16.7608 5.20067 16.4546 5.28322 16.3169 5.52294L15.8169 6.38867C15.6787 6.62792 15.7607 6.93359 16 7.07178C16.0786 7.1172 16.1645 7.13867 16.2495 7.13867C16.4224 7.13867 16.5903 7.04933 16.6831 6.88869L17.1831 6.02295C17.3213 5.78366 17.2393 5.47803 17 5.33984Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M12 2.00002C5.38331 2.00002 0 7.38334 0 14C0 16.0039 0.504891 17.9888 1.46044 19.7398C1.59277 19.982 1.896 20.0709 2.13914 19.939C2.38134 19.8067 2.47069 19.503 2.33836 19.2603C1.46287 17.6563 0.999984 15.837 0.999984 14C0.999984 7.93459 5.93456 3.00001 12 3.00001C18.0654 3.00001 23 7.93459 23 14C23 15.837 22.5371 17.6563 21.6616 19.2603C21.5293 19.503 21.6187 19.8067 21.8609 19.939C21.937 19.9805 22.0191 20 22.1001 20C22.2773 20 22.4488 19.9058 22.5396 19.7398C23.4951 17.9888 24 16.0039 24 14C24 7.38329 18.6167 2.00002 12 2.00002Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M12.498 8.45607C12.4756 8.19826 12.2593 8.00002 12 8.00002C11.7407 8.00002 11.5244 8.19826 11.502 8.45607L10.6147 18.5645C10.2217 18.9414 9.99998 19.4531 9.99998 20C9.99998 21.103 10.8969 22 12 22C13.1031 22 14 21.1031 14 20C14 19.4531 13.7783 18.9414 13.3853 18.5645L12.498 8.45607ZM12 21C11.4487 21 11 20.5513 11 20C11 19.6899 11.1455 19.4014 11.3985 19.208C11.5103 19.1226 11.5811 18.9941 11.5933 18.8545L12 14.2197L12.4067 18.8545C12.4189 18.9941 12.4898 19.1226 12.6015 19.208C12.8545 19.4014 13 19.6899 13 20C13 20.5513 12.5512 21 12 21Z\" fill=\"#AAAAAA\" />\n                </svg>}\n                value={this.props.pressure + \"mBar\"}\n                title={\"Pressure\"}\n              />\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M19.3043 3.13043C16.715 3.13043 14.6087 5.23721 14.6087 7.82608C14.6087 8.11408 14.8419 8.34782 15.1304 8.34782C15.419 8.34782 15.6522 8.11408 15.6522 7.82608C15.6522 5.81217 17.291 4.17391 19.3043 4.17391C21.3177 4.17391 22.9565 5.81217 22.9565 7.82608C22.9565 9.84 21.3177 11.4783 19.3043 11.4783H0.521739C0.233739 11.4783 0 11.712 0 12C0 12.288 0.233739 12.5217 0.521739 12.5217H19.3043C21.8937 12.5217 24 10.415 24 7.82608C24 5.23721 21.8937 3.13043 19.3043 3.13043Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M9.3913 2.08696C7.37739 2.08696 5.73913 3.72522 5.73913 5.73913C5.73913 6.02713 5.97287 6.26087 6.26087 6.26087C6.54887 6.26087 6.78261 6.02713 6.78261 5.73913C6.78261 4.3007 7.95287 3.13044 9.3913 3.13044C10.8297 3.13044 12 4.3007 12 5.73913C12 7.17757 10.8297 8.34783 9.3913 8.34783H0.521739C0.233739 8.34783 0 8.58157 0 8.86957C0 9.15757 0.233739 9.39131 0.521739 9.39131H9.3913C11.4052 9.39131 13.0435 7.75305 13.0435 5.73913C13.0435 3.72522 11.4052 2.08696 9.3913 2.08696Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M18.2609 14.6087H0.521739C0.233739 14.6087 0 14.8424 0 15.1304C0 15.4184 0.233739 15.6522 0.521739 15.6522H18.2609C19.6993 15.6522 20.8696 16.8224 20.8696 18.2609C20.8696 19.6993 19.6993 20.8696 18.2609 20.8696C16.8224 20.8696 15.6522 19.6993 15.6522 18.2609C15.6522 17.9729 15.419 17.7391 15.1304 17.7391C14.8419 17.7391 14.6087 17.9729 14.6087 18.2609C14.6087 20.2748 16.2475 21.913 18.2609 21.913C20.2743 21.913 21.913 20.2748 21.913 18.2609C21.913 16.247 20.2743 14.6087 18.2609 14.6087Z\" fill=\"#AAAAAA\" />\n                </svg>}\n                value={this.props.wind + \" km/h\"}\n                title={\"Wind\"}\n              />\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <g clip-path=\"url(#clip0)\">\n                    <path d=\"M23.5 16C22.1108 16 21.1538 16.0642 20.4164 16.1593C20.7409 15.3037 20.9204 14.4129 20.971 13.5H23.5C23.7764 13.5 24 13.2763 24 13C24 12.7236 23.7764 12.5 23.5 12.5H20.9747C20.8582 10.3958 20.0197 8.48586 18.6979 7.00953L20.4854 5.22163C20.6807 5.0263 20.6807 4.70989 20.4854 4.51461C20.29 4.31928 19.9736 4.31928 19.7783 4.51461L17.9909 6.30247C16.5146 4.9805 14.6045 4.14177 12.5 4.02533V1.49999C12.5 1.22361 12.2764 0.999969 12 0.999969C11.7236 0.999969 11.5 1.22361 11.5 1.49999V4.02533C9.39553 4.14177 7.48538 4.98055 6.00914 6.30247L4.2217 4.51466C4.02638 4.31933 3.70997 4.31933 3.51469 4.51466C3.31936 4.70999 3.31936 5.02639 3.51469 5.22167L5.30217 7.00958C3.98039 8.48591 3.14184 10.3959 3.02536 12.5H0.500016C0.223641 12.5 0 12.7236 0 13C0 13.2763 0.223641 13.5 0.500016 13.5H3.02897C3.07964 14.413 3.25908 15.3038 3.58359 16.1594C2.84653 16.0642 1.88958 16 0.500016 16C0.223641 16 0 16.2236 0 16.5C0 16.7764 0.223641 17 0.500016 17C3.18848 17 4.13283 17.2358 5.1338 17.4853C6.14845 17.7383 7.19728 18 10.0088 18C10.2852 18 10.5088 17.7763 10.5088 17.5C10.5088 17.2236 10.2852 17 10.0088 17C7.32033 17 6.37598 16.7641 5.37502 16.5146C5.17777 16.4654 4.97503 16.4164 4.76255 16.3685C4.26286 15.3018 4.00003 14.1713 4.00003 13C4.00003 8.58884 7.58892 4.99995 12 4.99995C16.4112 4.99995 20.0001 8.58884 20.0001 13C20.0001 14.1714 19.7372 15.3019 19.2375 16.3683C19.0243 16.4162 18.8209 16.4653 18.6231 16.5146C17.6212 16.7641 16.6758 17 13.9874 17C13.711 17 13.4873 17.2236 13.4873 17.5C13.4873 17.7763 13.711 18 13.9874 18C16.7989 18 17.8487 17.7383 18.8643 17.4853C19.8653 17.2358 20.8116 17 23.5001 17C23.7765 17 24.0001 16.7764 24.0001 16.5C24 16.2236 23.7764 16 23.5 16Z\" fill=\"#AAAAAA\" />\n                    <path d=\"M13.6465 20.1465L12.5 21.293V15.5C12.5 15.2236 12.2764 15 12 15C11.7236 15 11.5 15.2236 11.5 15.5V21.293L10.3535 20.1465C10.1582 19.9512 9.84178 19.9512 9.6465 20.1465C9.45118 20.3418 9.45118 20.6582 9.6465 20.8535L11.6459 22.8529C11.6922 22.8993 11.7476 22.9361 11.8091 22.9616C11.8702 22.9868 11.935 23 12 23C12.0651 23 12.1299 22.9868 12.191 22.9616C12.2525 22.9361 12.3079 22.8993 12.3542 22.8529L14.3536 20.8535C14.5489 20.6582 14.5489 20.3418 14.3536 20.1465C14.1582 19.9512 13.8418 19.9512 13.6465 20.1465Z\" fill=\"#AAAAAA\" />\n                  </g>\n                  <defs>\n                    <clipPath id=\"clip0\">\n                      <rect width=\"24\" height=\"24\" fill=\"white\" />\n                    </clipPath>\n                  </defs>\n                </svg>}\n                value={this.props.sunrise + ' AM'}\n                title={\"Sunrise\"}\n              />\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"20\" viewBox=\"0 0 24 20\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M23.5 15C22.1108 15 21.1538 15.0642 20.4164 15.1594C20.7409 14.3037 20.9204 13.4129 20.971 12.5H23.5C23.7764 12.5 24 12.2764 24 12C24 11.7236 23.7764 11.5 23.5 11.5H20.9747C20.8582 9.39586 20.0197 7.48589 18.6979 6.00956L20.4854 4.22166C20.6807 4.02633 20.6807 3.70992 20.4854 3.51464C20.29 3.31931 19.9736 3.31931 19.7783 3.51464L17.9909 5.3025C16.5146 3.98053 14.6045 3.1418 12.5 3.02536V0.49997C12.5 0.223595 12.2764 -4.57764e-05 12 -4.57764e-05C11.7236 -4.57764e-05 11.5 0.223595 11.5 0.49997V3.02531C9.39553 3.14175 7.48538 3.98053 6.00914 5.30245L4.22166 3.5146C4.02633 3.31927 3.70992 3.31927 3.51464 3.5146C3.31931 3.70992 3.31931 4.02633 3.51464 4.22161L5.30212 6.00952C3.98034 7.48589 3.1418 9.39586 3.02531 11.5H0.500016C0.223641 11.5 0 11.7236 0 12C0 12.2764 0.223641 12.5 0.500016 12.5H3.02897C3.07964 13.413 3.25908 14.3039 3.58359 15.1594C2.84653 15.0642 1.88958 15 0.500016 15C0.223641 15 0 15.2236 0 15.5C0 15.7763 0.223641 16 0.500016 16C3.18848 16 4.13283 16.2358 5.1338 16.4853C6.14845 16.7383 7.19728 17 10.0088 17C10.2852 17 10.5088 16.7763 10.5088 16.5C10.5088 16.2236 10.2852 16 10.0088 16C7.32033 16 6.37598 15.7642 5.37502 15.5146C5.17777 15.4655 4.97503 15.4164 4.76255 15.3686C4.26286 14.3018 4.00003 13.1713 4.00003 12C3.99998 7.58888 7.58888 3.99999 12 3.99999C16.4111 3.99999 20 7.58888 20 12C20 13.1714 19.7371 14.3019 19.2375 15.3683C19.0243 15.4163 18.8209 15.4654 18.6231 15.5146C17.6211 15.7642 16.6758 16 13.9873 16C13.7109 16 13.4873 16.2236 13.4873 16.5C13.4873 16.7764 13.7109 17 13.9873 17C16.7988 17 17.8486 16.7383 18.8643 16.4854C19.8652 16.2358 20.8115 16 23.5 16C23.7764 16 24 15.7763 24 15.5C24 15.2236 23.7764 15 23.5 15Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M14 15C14.1279 15 14.2558 14.9512 14.3535 14.8535C14.5489 14.6582 14.5489 14.3418 14.3535 14.1465L12.3541 12.1471C12.3079 12.1007 12.2525 12.0639 12.1909 12.0384C12.0687 11.9879 11.9313 11.9879 11.8091 12.0384C11.7475 12.0639 11.6921 12.1007 11.6459 12.1471L9.64645 14.1465C9.45113 14.3418 9.45113 14.6582 9.64645 14.8535C9.84178 15.0488 10.1582 15.0488 10.3535 14.8535L11.4999 13.707V19.5C11.4999 19.7764 11.7236 20 11.9999 20C12.2763 20 12.5 19.7764 12.5 19.5V13.707L13.6464 14.8535C13.7441 14.9512 13.8721 15 14 15Z\" fill=\"#AAAAAA\" />\n                </svg>}\n                value={this.props.sunset + ' PM'}\n                title={\"Sunset\"}\n              />\n              <ParameterOfDayComponent\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M18.0544 4.47612V1.84502H19.2974C19.6081 1.84502 19.8599 1.5933 19.8599 1.28252C19.8599 0.971736 19.6081 0.720016 19.2974 0.720016H4.32381C4.01303 0.720016 3.76131 0.971736 3.76131 1.28252C3.76131 1.5933 4.01303 1.84502 4.32381 1.84502H5.56693V4.47612C5.57502 6.08979 6.23296 7.6321 7.39171 8.75499L10.9894 12.2334L7.55027 15.4698C6.35513 16.5984 5.6782 18.1698 5.67943 19.8138V22.095H4.32381C4.01303 22.095 3.76131 22.3468 3.76131 22.6575C3.76131 22.9683 4.01303 23.22 4.32381 23.22H19.2974C19.6081 23.22 19.8599 22.9683 19.8599 22.6575C19.8599 22.3468 19.6081 22.095 19.2974 22.095H18.1107V19.8556C18.1077 18.1829 17.4033 16.588 16.1693 15.4589L12.6332 12.2281L16.2303 8.75499C17.3889 7.63192 18.0465 6.08979 18.0544 4.47612ZM16.9857 19.8556V22.095H6.80443V19.8138C6.80372 18.4801 7.35339 17.2055 8.32318 16.29L11.8193 13.0063L15.4122 16.289C16.4128 17.2052 16.9837 18.4989 16.9857 19.8556ZM11.8107 11.4568L8.17446 7.9471C7.23386 7.0362 6.69949 5.78516 6.69193 4.47612V1.84502H16.9294V4.47612C16.9217 5.78516 16.3873 7.0362 15.4467 7.9471L11.8107 11.4568Z\" fill=\"#AAAAAA\" />\n                </svg>\n                }\n                value={this.props.daytime}\n                title={\"Daytime\"}\n              />\n              <NextDayComponent\n                date_day_next={this.props.date_day_next1}\n                temp_day_max={this.props.temp_day2_max}\n                temp_day_min={this.props.temp_day2_min}\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M12 0C11.712 0 11.4783 0.233739 11.4783 0.521739V3.65217C11.4783 3.94017 11.7115 4.17391 12 4.17391C12.288 4.17391 12.5217 3.94017 12.5217 3.65217V0.521739C12.5217 0.233739 12.288 0 12 0Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M12 19.8261C11.712 19.8261 11.4783 20.0598 11.4783 20.3478V23.4783C11.4783 23.7663 11.712 24 12 24C12.288 24 12.5217 23.7663 12.5217 23.4783V20.3478C12.5217 20.0598 12.288 19.8261 12 19.8261Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M20.3478 11.4783H23.4783C23.7663 11.4783 24 11.712 24 12C24 12.288 23.7663 12.5217 23.4783 12.5217H20.3478C20.0598 12.5217 19.8261 12.288 19.8261 12C19.8261 11.712 20.0593 11.4783 20.3478 11.4783Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M3.65217 11.4783H0.521739C0.233739 11.4783 0 11.712 0 12C0 12.288 0.233217 12.5217 0.521739 12.5217H3.65217C3.94017 12.5217 4.17391 12.288 4.17391 12C4.17391 11.712 3.94017 11.4783 3.65217 11.4783Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M18.108 17.3703L20.7167 19.9789C20.9207 20.1829 20.9207 20.5127 20.7167 20.7167C20.6149 20.8184 20.4814 20.8696 20.3478 20.8696C20.2142 20.8696 20.0807 20.8184 19.9789 20.7167L17.3703 18.108C17.1663 17.904 17.1663 17.5743 17.3703 17.3703C17.5743 17.1663 17.904 17.1663 18.108 17.3703Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M6.62973 5.89201L4.02103 3.28331C3.81703 3.07931 3.48729 3.07931 3.28329 3.28331C3.07929 3.48731 3.07929 3.81705 3.28329 4.02105L5.89199 6.62975C5.99373 6.73148 6.12729 6.78261 6.26086 6.78261C6.39442 6.78261 6.52799 6.73148 6.62973 6.62975C6.83373 6.42575 6.83373 6.09601 6.62973 5.89201Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M5.89199 17.3703C6.09599 17.1663 6.42573 17.1663 6.62973 17.3703C6.83373 17.5743 6.83373 17.904 6.62973 18.108L4.02103 20.7167C3.91929 20.8184 3.78573 20.8696 3.65216 20.8696C3.5186 20.8696 3.38503 20.8184 3.28329 20.7167C3.07929 20.5127 3.07929 20.1829 3.28329 19.9789L5.89199 17.3703Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M20.7167 3.28331C20.5127 3.07931 20.1829 3.07931 19.9789 3.28331L17.3703 5.89201C17.1663 6.09601 17.1663 6.42575 17.3703 6.62975C17.472 6.73148 17.6056 6.78261 17.7391 6.78261C17.8727 6.78261 18.0063 6.73148 18.108 6.62975L20.7167 4.02105C20.9207 3.81705 20.9207 3.48731 20.7167 3.28331Z\" fill=\"#AAAAAA\" />\n                  <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.26086 12C6.26086 8.83565 8.83565 6.26086 12 6.26086C15.1643 6.26086 17.7391 8.83565 17.7391 12C17.7391 15.1643 15.1643 17.7391 12 17.7391C8.83565 17.7391 6.26086 15.1643 6.26086 12ZM7.30434 12C7.30434 14.5889 9.41113 16.6956 12 16.6956C14.5889 16.6956 16.6956 14.5889 16.6956 12C16.6956 9.41113 14.5889 7.30434 12 7.30434C9.41113 7.30434 7.30434 9.41113 7.30434 12Z\" fill=\"#AAAAAA\" />\n                </svg>}\n              />\n              <NextDayComponent\n                date_day_next={this.props.date_day_next2}\n                temp_day_max={this.props.temp_day3_max}\n                temp_day_min={this.props.temp_day3_min}\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M22.4974 12.7377C23.4584 11.6875 24 10.308 24 8.86956C24 5.70521 21.4252 3.13043 18.2609 3.13043C16.4546 3.13043 14.7814 3.98035 13.6993 5.40887C13.1431 5.28417 12.5734 5.21739 12 5.21739C8.27843 5.21739 5.06348 7.88869 4.33513 11.4965C1.91426 11.6817 0 13.7066 0 16.1739C0 18.7628 2.10678 20.8696 4.69565 20.8696H19.3043C21.8932 20.8696 24 18.7628 24 16.1739C24 14.8643 23.4464 13.62 22.4974 12.7377ZM18.2609 4.17391C20.8497 4.17391 22.9565 6.28069 22.9565 8.86956C22.9565 10.0816 22.4864 11.2424 21.6558 12.1106C21.6005 12.0783 21.5416 12.0537 21.4847 12.0235C21.4294 11.9943 21.3741 11.9656 21.3172 11.9384C21.144 11.8555 20.9671 11.7824 20.7856 11.7219C20.7621 11.7141 20.7397 11.7031 20.7162 11.6958C20.5122 11.6311 20.3035 11.5847 20.0922 11.5487C20.0337 11.5388 19.9753 11.533 19.9163 11.5252C19.835 11.5143 19.7541 11.4986 19.6717 11.4923C19.1384 8.84765 17.2831 6.67461 14.7741 5.72661C15.6574 4.74417 16.9169 4.17391 18.2609 4.17391ZM19.3043 19.8261H4.69565C2.68174 19.8261 1.04348 18.1878 1.04348 16.1739C1.04348 14.16 2.68174 12.5217 4.66957 12.517C4.6753 12.5181 4.68156 12.5181 4.68783 12.5186C4.69043 12.5191 4.69252 12.5207 4.69513 12.5212C4.71913 12.5249 4.74313 12.5264 4.76713 12.5264C4.76765 12.5264 4.7687 12.5264 4.76922 12.5264C5.04104 12.5264 5.3207 12.5619 5.60087 12.6323C5.62122 12.6412 5.64261 12.6485 5.66452 12.6543C6.58278 12.9047 7.38313 13.5224 7.86 14.3478C8.004 14.5972 8.32278 14.6828 8.5727 14.5383C8.82209 14.3943 8.90765 14.075 8.76313 13.8256C8.16261 12.7863 7.16348 12.0036 6.01304 11.6687C5.98904 11.6577 5.964 11.6489 5.93791 11.6421C5.7553 11.593 5.5727 11.556 5.39009 11.5299C6.08661 8.49026 8.83357 6.26087 12 6.26087C12.6005 6.26087 13.1969 6.34069 13.7718 6.49826C13.7723 6.49826 13.7723 6.49826 13.7729 6.49826C13.7734 6.49826 13.7734 6.49878 13.7739 6.49878C16.2089 7.15669 18.0563 9.10069 18.6115 11.5299C18.4289 11.5565 18.2457 11.593 18.0631 11.6426C18.037 11.6494 18.012 11.6583 17.988 11.6692C17.0588 11.941 16.2282 12.5003 15.6386 13.248C15.637 13.2501 15.6344 13.2506 15.6329 13.2527C15.6313 13.2548 15.6303 13.2569 15.6287 13.259C15.6266 13.2616 15.6245 13.2631 15.6224 13.2657C15.6203 13.2683 15.6203 13.2715 15.6183 13.2741C15.4748 13.4489 15.3443 13.6356 15.2337 13.8329C15.0929 14.0843 15.1831 14.4021 15.4346 14.543C15.5144 14.5873 15.6021 14.6087 15.6882 14.6087C15.8713 14.6087 16.0487 14.5122 16.1442 14.3416C16.2271 14.1929 16.3247 14.0515 16.4337 13.9205C16.4358 13.9179 16.4363 13.9148 16.4379 13.9122C16.4395 13.9101 16.4426 13.9096 16.4442 13.907C16.9127 13.3059 17.5852 12.8614 18.3365 12.6543C18.3579 12.6485 18.3788 12.6412 18.3986 12.6329C18.6793 12.5624 18.959 12.527 19.2313 12.527C19.2642 12.527 19.272 12.528 19.3043 12.5217C20.0645 12.5217 20.795 12.7555 21.4179 13.1974C22.3816 13.883 22.9565 14.9953 22.9565 16.1739C22.9565 18.1878 21.3183 19.8261 19.3043 19.8261Z\" fill=\"#AAAAAA\" />\n                </svg>}\n              />\n              <NextDayComponent\n                date_day_next={this.props.date_day_next3}\n                temp_day_max={this.props.temp_day4_max}\n                temp_day_min={this.props.temp_day4_min}\n                image={<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M19.9012 5.28105C20.8252 5.78505 21.6981 6.26088 23.4783 6.26088C23.7668 6.26088 24 6.49462 24 6.78262C24 7.07062 23.7668 7.30436 23.4783 7.30436C21.4331 7.30436 20.4016 6.74228 19.4037 6.1985L19.4014 6.19723C18.4774 5.69323 17.6045 5.2174 15.8243 5.2174C14.0442 5.2174 13.1713 5.69323 12.2468 6.19723L12.2452 6.19807C11.2476 6.74199 10.2162 7.30436 8.17043 7.30436C6.12574 7.30436 5.09426 6.74169 4.09693 6.19764C3.17347 5.69365 2.30084 5.2174 0.521739 5.2174C0.233217 5.2174 0 4.98366 0 4.69566C0 4.40766 0.233217 4.17392 0.521739 4.17392C2.56644 4.17392 3.59791 4.73659 4.59524 5.28064C5.5187 5.78463 6.39133 6.26088 8.17043 6.26088C9.95061 6.26088 10.8235 5.78505 11.748 5.28105L11.7495 5.28021C12.7472 4.7363 13.7786 4.17392 15.8243 4.17392C17.8695 4.17392 18.901 4.736 19.8989 5.27978L19.9012 5.28105Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M19.9012 9.45497C20.8252 9.95897 21.6981 10.4348 23.4783 10.4348C23.7668 10.4348 24 10.6685 24 10.9565C24 11.2445 23.7668 11.4783 23.4783 11.4783C21.4331 11.4783 20.4016 10.9162 19.4037 10.3724L19.4014 10.3711C18.4774 9.86714 17.6045 9.39132 15.8243 9.39132C14.0442 9.39132 13.1713 9.86714 12.2468 10.3711L12.2452 10.372C11.2476 10.9159 10.2162 11.4783 8.17043 11.4783C6.12574 11.4783 5.09426 10.9156 4.09693 10.3716C3.17347 9.86757 2.30084 9.39132 0.521739 9.39132C0.233217 9.39132 0 9.15758 0 8.86958C0 8.58158 0.233217 8.34784 0.521739 8.34784C2.56644 8.34784 3.59791 8.91051 4.59524 9.45455C5.5187 9.95855 6.39133 10.4348 8.17043 10.4348C9.95061 10.4348 10.8235 9.95897 11.748 9.45497L11.7496 9.45413C12.7472 8.91021 13.7786 8.34784 15.8243 8.34784C17.8695 8.34784 18.901 8.90992 19.8989 9.4537L19.9012 9.45497Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M23.4783 18.7826C21.6981 18.7826 20.8252 18.3068 19.9012 17.8028L19.8989 17.8015C18.901 17.2577 17.8695 16.6956 15.8243 16.6956C13.7786 16.6956 12.7472 17.258 11.7496 17.8019L11.748 17.8028C10.8235 18.3068 9.95061 18.7826 8.17043 18.7826C6.39133 18.7826 5.5195 18.3068 4.59604 17.8028C3.59871 17.2588 2.56644 16.6956 0.521739 16.6956C0.233217 16.6956 0 16.9294 0 17.2174C0 17.5054 0.233217 17.7391 0.521739 17.7391C2.30084 17.7391 3.17267 18.2149 4.09613 18.7189C5.09346 19.263 6.12574 19.8261 8.17043 19.8261C10.2162 19.8261 11.2476 19.2637 12.2452 18.7198L12.2468 18.719C13.1713 18.215 14.0442 17.7391 15.8243 17.7391C17.6045 17.7391 18.4774 18.215 19.4014 18.719L19.4037 18.7202C20.4016 19.264 21.4331 19.8261 23.4783 19.8261C23.7668 19.8261 24 19.5923 24 19.3043C24 19.0163 23.7668 18.7826 23.4783 18.7826Z\" fill=\"#AAAAAA\" />\n                  <path d=\"M19.9012 13.6289C20.8252 14.1329 21.6981 14.6087 23.4783 14.6087C23.7668 14.6087 24 14.8424 24 15.1304C24 15.4184 23.7668 15.6521 23.4783 15.6521C21.4331 15.6521 20.4016 15.0901 19.4037 14.5463L19.4014 14.545C18.4774 14.041 17.6045 13.5652 15.8243 13.5652C14.0442 13.5652 13.1713 14.041 12.2468 14.545L12.2452 14.5459C11.2476 15.0898 10.2162 15.6521 8.17043 15.6521C6.12574 15.6521 5.09426 15.0895 4.09693 14.5454C3.17347 14.0414 2.30084 13.5652 0.521739 13.5652C0.233217 13.5652 0 13.3315 0 13.0435C0 12.7555 0.233217 12.5217 0.521739 12.5217C2.56644 12.5217 3.59791 13.0844 4.59524 13.6284C5.5187 14.1324 6.39134 14.6087 8.17043 14.6087C9.95061 14.6087 10.8235 14.1329 11.748 13.6289L11.7495 13.628C12.7472 13.0841 13.7786 12.5217 15.8243 12.5217C17.8695 12.5217 18.901 13.0838 19.8989 13.6276L19.9012 13.6289Z\" fill=\"#AAAAAA\" />\n                </svg>}\n              />\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default DataOfHalfDay;","export const WEEK_DAYS = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n];\nexport const MONTHS = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];","import React from \"react\";\nimport Locations from \"./components/Locations\";\nimport DataOfHalfDay from \"./components/DataOfHalfDay\";\nimport { WEEK_DAYS, MONTHS } from \"./constants/constants\";\n\nconst API_KEY = \"2dd62d48ced57a57cb21a5da5ee706fe\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let stateLocal = JSON.parse(localStorage.state);\n    this.state =\n      stateLocal !== \"\"\n        ? stateLocal\n        : {\n            city: undefined,\n            cityList: [],\n            country: undefined,\n            date_day2: undefined,\n            date_day3: undefined,\n            date_day4: undefined,\n            date_day_next1: undefined,\n            date_day_next2: undefined,\n            date_day_next3: undefined,\n            daytime: undefined,\n            date_now: undefined,\n            date_now_night: undefined,\n            error: undefined,\n            humidity: undefined,\n            humidity_night: undefined,\n            pressure: undefined,\n            pressure_night: undefined,\n            temp: undefined,\n            temp_day: undefined,\n            temp_night: undefined,\n            temp_min: undefined,\n            temp_max: undefined,\n            temp_day2_min: undefined,\n            temp_day2_max: undefined,\n            temp_day3_min: undefined,\n            temp_day3_max: undefined,\n            temp_day4_min: undefined,\n            temp_day4_max: undefined,\n            sunset: undefined,\n            sunrise: undefined,\n            wind: undefined,\n            wind_night: undefined,\n            weather: undefined,\n            weather_night: undefined,\n            weather_icon: undefined,\n            weather_icon_night: undefined,\n          };\n    this.deleteCityInList = this.deleteCityInList.bind(this);\n    this.getWeather = this.getWeather.bind(this);\n    this.getOneCityWeather = this.getOneCityWeather.bind(this);\n  }\n\n  deleteCityInList = async (e) => {\n    e.preventDefault();\n    const ourElementNumber = e.target.value;\n    let newCityList = [...this.state.cityList];\n    newCityList.splice(ourElementNumber, 1);\n    for (let i = ourElementNumber; i < newCityList.length; i++) {\n      newCityList[i][0]--;\n    }\n    this.setState({\n      cityList: [...newCityList],\n    });\n    localStorage.state = JSON.stringify(this.state);\n  };\n\n  getWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n\n    if (city) {\n      const api_url = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      const data = await api_url.json();\n      let counterOfDouble = 0;\n      for (let i = 0; i < this.state.cityList.length; i++) {\n        if (city == this.state.cityList[i][1]) {\n          counterOfDouble++;\n        }\n      }\n      if (counterOfDouble == 0) {\n        this.setState({\n          cityList: [\n            ...this.state.cityList,\n            [\n              this.state.cityList.length,\n              data.name,\n              data.sys.country,\n              data.main.temp,\n            ],\n          ],\n        });\n        localStorage.state = JSON.stringify(this.state);\n      } else {\n        this.setState({\n          cityList: [...this.state.cityList],\n        });\n        localStorage.state = JSON.stringify(this.state);\n      }\n    } else {\n      this.setState({\n        cityList: [...this.state.cityList],\n      });\n      localStorage.state = JSON.stringify(this.state);\n    }\n  };\n\n  getOneCityWeather = async (e) => {\n    e.preventDefault();\n    const city = e.target.value;\n\n    if (city) {\n      const api_url = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n\n      const data = await api_url.json();\n      const api_url2 = await fetch(\n        `https://api.openweathermap.org/data/2.5/onecall?lat=${data.coord.lat}&lon=${data.coord.lon}&exclude=current&appid=${API_KEY}&units=metric`\n      );\n      const data2 = await api_url2.json();\n      var dateSet = new Date();\n      var dateSet2 = new Date();\n      let dataSetDay2 = new Date();\n      let dataSetDay3 = new Date();\n      let dataSetDay4 = new Date();\n      dateSet.setTime(data.sys.sunset);\n      dateSet2.setTime(data.sys.sunrise);\n\n      dataSetDay2.setTime(data2.daily[1].dt);\n      dataSetDay3.setTime(data2.daily[2].dt);\n      dataSetDay4.setTime(data2.daily[3].dt);\n\n      var sunsetDate = `${dateSet.getHours() - 12}:${dateSet.getMinutes()}`;\n      var sunriseDate = `${dateSet2.getHours() - 12}:${dateSet2.getMinutes()}`;\n      let daytimeString = \"\";\n      let newDate = new Date();\n      let date_now_const = `${\n        WEEK_DAYS[newDate.getDay()]\n      }, ${newDate.getDate()} ${\n        MONTHS[newDate.getMonth()]\n      } ${newDate.getFullYear()} | ${newDate.getHours()}h:${newDate.getMinutes()}m`;\n      let date_now_const_next = \"\";\n      if (newDate.getHours() >= 12) {\n        date_now_const_next = `${WEEK_DAYS[newDate.getDay() + 1]}, ${\n          newDate.getDate() + 1\n        } ${MONTHS[newDate.getMonth()]} ${newDate.getFullYear()} | ${\n          newDate.getHours() - 12\n        }h:${newDate.getMinutes()}m`;\n      } else {\n        date_now_const_next = `${\n          WEEK_DAYS[newDate.getDay()]\n        }, ${newDate.getDate()} ${\n          MONTHS[newDate.getMonth()]\n        } ${newDate.getFullYear()} | ${\n          newDate.getHours() + 12\n        }h:${newDate.getMinutes()}m`;\n      }\n\n      if (dateSet.getMinutes() + dateSet2.getMinutes() >= 60) {\n        daytimeString = `${dateSet2.getHours() - 23 + dateSet.getHours()}h ${\n          dateSet.getMinutes() + dateSet2.getMinutes() - 60\n        }m`;\n      } else {\n        daytimeString = `${dateSet2.getHours() - 24 + dateSet.getHours()}h ${\n          dateSet.getMinutes() + dateSet2.getMinutes()\n        }m`;\n      }\n\n      let ourTime = new Date();\n      if (!city) {\n        this.setState({\n          city: undefined,\n          cityList: [...this.state.cityList],\n          country: undefined,\n          date_day2: undefined,\n          date_day3: undefined,\n          date_day4: undefined,\n          date_day_next1: undefined,\n          date_day_next2: undefined,\n          date_day_next3: undefined,\n          daytime: undefined,\n          date_now: new Date(),\n          date_now_night: undefined,\n          error: \"Mistake! Please let's try again\",\n          humidity: undefined,\n          humidity_night: undefined,\n          pressure: undefined,\n          pressure_night: undefined,\n          temp: undefined,\n          temp_day: undefined,\n          temp_night: undefined,\n          temp_min: undefined,\n          temp_max: undefined,\n          temp_day2_min: undefined,\n          temp_day2_max: undefined,\n          temp_day3_min: undefined,\n          temp_day3_max: undefined,\n          temp_day4_min: undefined,\n          temp_day4_max: undefined,\n          sunset: undefined,\n          sunrise: undefined,\n          wind: undefined,\n          wind_night: undefined,\n          weather: undefined,\n          weather_night: undefined,\n          weather_icon: undefined,\n          weather_icon_night: undefined,\n        });\n        localStorage.state = JSON.stringify(this.state);\n      } else if (ourTime.getHours() >= 7 && ourTime.getHours() < 19) {\n        //Значит день\n        this.setState({\n          city: data.name,\n          cityList: [...this.state.cityList],\n          country: data.sys.country,\n          date_day2: `${dataSetDay2\n            .getDay()\n            .toString()}, ${dataSetDay2.getDate()} `,\n          date_day3: `${dataSetDay3\n            .getDay()\n            .toString()}, ${dataSetDay3.getDate()} `,\n          date_day4: `${dataSetDay4\n            .getDay()\n            .toString()}, ${dataSetDay4.getDate()} `,\n          date_day_next1: `${WEEK_DAYS[newDate.getDay() + 2]}`,\n          date_day_next2: `${WEEK_DAYS[newDate.getDay() + 3]}`,\n          date_day_next3: `${WEEK_DAYS[newDate.getDay() + 4]}`,\n          daytime: daytimeString,\n          date_now: date_now_const,\n          date_now_night: date_now_const_next,\n          error: \"\",\n          humidity: Math.floor(data.main.humidity),\n          humidity_night: Math.floor(data2.hourly[12].humidity),\n          pressure: Math.floor(data.main.pressure),\n          pressure_night: Math.floor(data2.hourly[12].pressure),\n          temp: Math.floor(data.main.temp),\n          temp_day: Math.floor(data2.daily[0].temp.day),\n          temp_night: Math.floor(data2.daily[0].temp.night),\n          temp_min: Math.floor(data2.daily[0].temp.min),\n          temp_max: Math.floor(data2.daily[0].temp.max),\n          temp_day2_min: Math.floor(data2.daily[1].temp.min),\n          temp_day2_max: Math.floor(data2.daily[1].temp.max),\n          temp_day3_min: Math.floor(data2.daily[2].temp.min),\n          temp_day3_max: Math.floor(data2.daily[2].temp.max),\n          temp_day4_min: Math.floor(data2.daily[3].temp.min),\n          temp_day4_max: Math.floor(data2.daily[3].temp.max),\n          sunset: sunsetDate,\n          sunrise: sunriseDate,\n          wind: Math.floor(data.wind.speed),\n          wind_night: Math.floor(data2.hourly[12].wind_speed),\n          weather: data2.hourly[0].weather[0].main,\n          weather_night: data2.hourly[12].weather[0].main,\n          weather_icon: data2.hourly[0].weather[0].icon,\n          weather_icon_night: data2.hourly[12].weather[0].icon,\n        });\n        localStorage.state = JSON.stringify(this.state);\n      } else {\n        //Значит ночь\n        this.setState({\n          city: data.name,\n          cityList: [...this.state.cityList],\n          country: data.sys.country,\n          date_day2: `${dataSetDay2.getDay()}, ${dataSetDay2.getDate()} `,\n          date_day3: `${dataSetDay3.getDay()}, ${dataSetDay3.getDate()} `,\n          date_day4: `${dataSetDay4.getDay()}, ${dataSetDay4.getDate()} `,\n          date_day_next1: `${WEEK_DAYS[newDate.getDay() + 2]}`,\n          date_day_next2: `${WEEK_DAYS[newDate.getDay() + 3]}`,\n          date_day_next3: `${WEEK_DAYS[newDate.getDay() + 4]}`,\n          daytime: daytimeString,\n          date_now: date_now_const_next,\n          date_now_night: date_now_const,\n          error: \"\",\n          humidity: Math.floor(data2.hourly[12].humidity),\n          humidity_night: Math.floor(data.main.humidity),\n          pressure: Math.floor(data2.hourly[12].pressure),\n          pressure_night: Math.floor(data.main.pressure),\n          temp: Math.floor(data.main.temp),\n          temp_day: Math.floor(data2.daily[0].temp.day),\n          temp_night: Math.floor(data2.daily[0].temp.night),\n          temp_min: Math.floor(data.main.temp_min),\n          temp_max: Math.floor(data.main.temp_max),\n          temp_day2_min: Math.floor(data2.daily[1].temp.min),\n          temp_day2_max: Math.floor(data2.daily[1].temp.max),\n          temp_day3_min: Math.floor(data2.daily[2].temp.min),\n          temp_day3_max: Math.floor(data2.daily[2].temp.max),\n          temp_day4_min: Math.floor(data2.daily[3].temp.min),\n          temp_day4_max: Math.floor(data2.daily[3].temp.max),\n          sunset: sunsetDate,\n          sunrise: sunriseDate,\n          wind: Math.floor(data2.hourly[12].wind_speed),\n          wind_night: Math.floor(data.wind.speed),\n          weather: data2.hourly[12].weather[0].main,\n          weather_night: data2.hourly[0].weather[0].main,\n          weather_icon: data2.hourly[12].weather[0].icon,\n          weather_icon_night: data2.hourly[0].weather[0].icon,\n        });\n        localStorage.state = JSON.stringify(this.state);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"main\">\n          <Locations\n            cityList={this.state.cityList}\n            deleteCityInList={this.deleteCityInList}\n            getOneCity={this.getOneCityWeather}\n            weatherMethod={this.getWeather}\n          />\n          <DataOfHalfDay\n            city={this.state.city}\n            country={this.state.country}\n            date_day2={this.state.date_day2}\n            date_day3={this.state.date_day3}\n            date_day4={this.state.date_day4}\n            date_day_next1={this.state.date_day_next1}\n            date_day_next2={this.state.date_day_next2}\n            date_day_next3={this.state.date_day_next3}\n            daytime={this.state.daytime}\n            date_now={this.state.date_now_night}\n            error={this.state.error}\n            humidity={this.state.humidity_night}\n            picture={'night-graphic'}\n            pressure={this.state.pressure_night}\n            temp={this.state.temp}\n            temp_min={this.state.temp_min}\n            temp_max={this.state.temp_max}\n            temp_day2_min={this.state.temp_day2_min}\n            temp_day2_max={this.state.temp_day2_max}\n            temp_day3_min={this.state.temp_day3_min}\n            temp_day3_max={this.state.temp_day3_max}\n            temp_day4_min={this.state.temp_day4_min}\n            temp_day4_max={this.state.temp_day4_max}\n            temp_of_half_day={this.state.temp_night}\n            sunset={this.state.sunset}\n            sunrise={this.state.sunrise}\n            wind={this.state.wind_night}\n            weather={this.state.weather_night}\n            weather_icon={this.state.weather_icon_night}\n          />\n          <DataOfHalfDay\n            city={this.state.city}\n            country={this.state.country}\n            date_day2={this.state.date_day2}\n            date_day3={this.state.date_day3}\n            date_day4={this.state.date_day4}\n            date_day_next1={this.state.date_day_next1}\n            date_day_next2={this.state.date_day_next2}\n            date_day_next3={this.state.date_day_next3}\n            daytime={this.state.daytime}\n            date_now={this.state.date_now}\n            error={this.state.error}\n            humidity={this.state.humidity}\n            picture={'night-graphic day-graphic'}\n            pressure={this.state.pressure}\n            temp={this.state.temp}\n            temp_min={this.state.temp_min}\n            temp_max={this.state.temp_max}\n            temp_day2_min={this.state.temp_day2_min}\n            temp_day2_max={this.state.temp_day2_max}\n            temp_day3_min={this.state.temp_day3_min}\n            temp_day3_max={this.state.temp_day3_max}\n            temp_day4_min={this.state.temp_day4_min}\n            temp_day4_max={this.state.temp_day4_max}\n            temp_of_half_day={this.state.temp_day}\n            sunset={this.state.sunset}\n            sunrise={this.state.sunrise}\n            wind={this.state.wind}\n            weather={this.state.weather}\n            weather_icon={this.state.weather_icon}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}